"use strict";(self.webpackChunkfluss_website=self.webpackChunkfluss_website||[]).push([[1116],{3940:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>g,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"table-design/table-types/pk-table/merge-engines/first-row","title":"FirstRow Merge Engine","description":"\x3c!--","source":"@site/docs/table-design/table-types/pk-table/merge-engines/first-row.md","sourceDirName":"table-design/table-types/pk-table/merge-engines","slug":"/table-design/table-types/pk-table/merge-engines/first-row","permalink":"/docs/next/table-design/table-types/pk-table/merge-engines/first-row","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/fluss/edit/main/website/docs/table-design/table-types/pk-table/merge-engines/first-row.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_label":"FirstRow","title":"FirstRow Merge Engine","sidebar_position":3},"sidebar":"docsSidebar","previous":{"title":"Default (LastRow)","permalink":"/docs/next/table-design/table-types/pk-table/merge-engines/default"},"next":{"title":"Versioned","permalink":"/docs/next/table-design/table-types/pk-table/merge-engines/versioned"}}');var i=t(4848),r=t(8453);const a={sidebar_label:"FirstRow",title:"FirstRow Merge Engine",sidebar_position:3},l="FirstRow Merge Engine",o={},d=[{value:"Example",id:"example",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"firstrow-merge-engine",children:"FirstRow Merge Engine"})}),"\n",(0,i.jsxs)(n.p,{children:["By setting ",(0,i.jsx)(n.code,{children:"'table.merge-engine' = 'first_row'"})," in the table properties, users can retain the first record for each primary key.\nThis configuration generates an insert-only changelog, allowing downstream Flink jobs to treat the Primary Key Table as an append-only Log Table.\nAs a result, downstream transformations that do not support retractions/changelogs, such as ",(0,i.jsx)(n.a,{href:"https://nightlies.apache.org/flink/flink-docs-release-1.20/docs/dev/table/sql/queries/window-agg/",children:"Window Aggregations"}),"\nand ",(0,i.jsx)(n.a,{href:"https://nightlies.apache.org/flink/flink-docs-release-1.20/docs/dev/table/sql/queries/joins/#interval-joins",children:"Interval Joins"}),", can be applied seamlessly."]}),"\n",(0,i.jsx)(n.p,{children:"This feature is particularly valuable for replacing log deduplication in streaming computations, reducing complexity and improving overall efficiency."}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsxs)(n.p,{children:["When using ",(0,i.jsx)(n.code,{children:"first_row"})," merge engine, there are the following limits:"]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"UPDATE"})," and ",(0,i.jsx)(n.code,{children:"DELETE"})," SQL statements are not supported"]}),"\n",(0,i.jsx)(n.li,{children:"Partial Update is not supported"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"UPDATE_BEFORE"})," and ",(0,i.jsx)(n.code,{children:"DELETE"})," changelog events are ignored automatically"]}),"\n"]})]}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"CREATE TABLE T (\n    k  INT,\n    v1 DOUBLE,\n    v2 STRING,\n    PRIMARY KEY (k) NOT ENFORCED\n) WITH (\n    'table.merge-engine' = 'first_row'\n);\n\nINSERT INTO T VALUES (1, 2.0, 't1');\nINSERT INTO T VALUES (1, 3.0, 't2');\n\nSELECT * FROM T WHERE k = 1;\n\n-- Output\n-- +---+-----+------+\n-- | k | v1  | v2   |\n-- +---+-----+------+\n-- | 1 | 2.0 | t1   |\n-- +---+-----+------+\n"})})]})}function g(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var s=t(6540);const i={},r=s.createContext(i);function a(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);