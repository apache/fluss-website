"use strict";(self.webpackChunkfluss_website=self.webpackChunkfluss_website||[]).push([[8616],{6191:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"table-design/table-types/pk-table/merge-engines/default","title":"Default Merge Engine","description":"\x3c!--","source":"@site/docs/table-design/table-types/pk-table/merge-engines/default.md","sourceDirName":"table-design/table-types/pk-table/merge-engines","slug":"/table-design/table-types/pk-table/merge-engines/default","permalink":"/docs/next/table-design/table-types/pk-table/merge-engines/default","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/fluss/edit/main/website/docs/table-design/table-types/pk-table/merge-engines/default.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_label":"Default (LastRow)","title":"Default Merge Engine","sidebar_position":2},"sidebar":"docsSidebar","previous":{"title":"Merge Engines","permalink":"/docs/next/table-design/table-types/pk-table/merge-engines/"},"next":{"title":"FirstRow","permalink":"/docs/next/table-design/table-types/pk-table/merge-engines/first-row"}}');var s=n(4848),i=n(8453);const r={sidebar_label:"Default (LastRow)",title:"Default Merge Engine",sidebar_position:2},l="Default Merge Engine (LastRow)",o={},d=[{value:"Overview",id:"overview",level:2},{value:"Example",id:"example",level:2}];function p(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"default-merge-engine-lastrow",children:"Default Merge Engine (LastRow)"})}),"\n",(0,s.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.strong,{children:"Default Merge Engine"})," behaves as a LastRow merge engine that retains the latest record for a given primary key. It supports all the operations: ",(0,s.jsx)(t.code,{children:"INSERT"}),", ",(0,s.jsx)(t.code,{children:"UPDATE"}),", ",(0,s.jsx)(t.code,{children:"DELETE"}),".\nAdditionally, the default merge engine supports ",(0,s.jsx)(t.a,{href:"/docs/next/table-design/table-types/pk-table/#partial-update",children:"Partial Update"}),", which preserves the latest values for the specified update columns.\nIf the ",(0,s.jsx)(t.code,{children:"'table.merge-engine'"})," property is not explicitly defined in the table properties when creating a Primary Key Table, the default merge engine will be applied automatically."]}),"\n",(0,s.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"CREATE TABLE T (\n    k  INT,\n    v1 DOUBLE,\n    v2 STRING,\n    PRIMARY KEY (k) NOT ENFORCED\n);\n\n-- Insert\nINSERT INTO T(k, v1, v2) VALUES (1, 1.0, 't1');\nINSERT INTO T(k, v1, v2) VALUES (1, 1.0, 't2');\nSELECT * FROM T WHERE k = 1;\n-- Output:\n+----+-----+----+\n| k  | v1  | v2 |\n+----+-----+----+\n| 1  | 1.0 | t2 |\n+----+-----+----+\n\n-- Update\nINSERT INTO T(k, v1, v2) VALUES (2, 2.0, 't2');\n-- Switch to batch mode to perform update operation for UPDATE statement is only supported for batch mode currently\nSET execution.runtime-mode = batch;\nUPDATE T SET v1 = 4.0 WHERE k = 2;\nSELECT * FROM T WHERE k = 2;\n -- Output:\n+----+-----+----+\n| k  | v1  | v2 |\n+----+-----+----+\n| 2  | 4.0 | t2 |\n+----+-----+----+\n\n\n-- Partial Update\nINSERT INTO T(k, v1) VALUES (3, 3.0); -- set v1 to 3.0\nSELECT * FROM T WHERE k = 3;\n-- Output:\n+----+-----+------+\n| k  | v1  | v2   |\n+----+-----+------+\n| 3  | 3.0 | null |\n+----+-----+------+\nINSERT INTO T(k, v2) VALUES (3, 't3'); -- set v2 to 't3'\nSELECT * FROM T WHERE k = 3;\n-- Output:\n+----+-----+----+\n| k  | v1  | v2 |\n+----+-----+----+\n| 3  | 3.0 | t3 |\n+----+-----+----+\n \n-- Delete\nDELETE FROM T WHERE k = 2;\n-- Switch to streaming mode\nSET execution.runtime-mode = streaming;\nSELECT * FROM T;\n-- Output:\n+----+-----+----+\n| k  | v1  | v2 |\n+----+-----+----+\n| 1  | 1.0 | t2 |\n+----+-----+----+\n"})})]})}function c(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var a=n(6540);const s={},i=a.createContext(s);function r(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);