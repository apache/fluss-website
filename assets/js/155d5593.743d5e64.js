"use strict";(self.webpackChunkfluss_website=self.webpackChunkfluss_website||[]).push([[1440],{6592:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"streaming-lakehouse/integrate-data-lakes/paimon","title":"Paimon","description":"\x3c!--","source":"@site/versioned_docs/version-0.7/streaming-lakehouse/integrate-data-lakes/paimon.md","sourceDirName":"streaming-lakehouse/integrate-data-lakes","slug":"/streaming-lakehouse/integrate-data-lakes/paimon","permalink":"/docs/streaming-lakehouse/integrate-data-lakes/paimon","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/fluss/edit/main/website/docs/streaming-lakehouse/integrate-data-lakes/paimon.md","tags":[],"version":"0.7","sidebarPosition":1,"frontMatter":{"title":"Paimon","sidebar_position":1},"sidebar":"docsSidebar","previous":{"title":"Lakehouse Overview","permalink":"/docs/streaming-lakehouse/overview"},"next":{"title":"Configuration","permalink":"/docs/maintenance/configuration"}}');var s=a(4848),i=a(8453);const r={title:"Paimon",sidebar_position:1},l="Paimon",o={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Read Tables",id:"read-tables",level:2},{value:"Reading with Apache Flink",id:"reading-with-apache-flink",level:3},{value:"Read Data Only in Paimon",id:"read-data-only-in-paimon",level:4},{value:"Union Read of Data in Fluss and Paimon",id:"union-read-of-data-in-fluss-and-paimon",level:4},{value:"Reading with other Engines",id:"reading-with-other-engines",level:3},{value:"Data Type Mapping",id:"data-type-mapping",level:2}];function c(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"paimon",children:"Paimon"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://paimon.apache.org/",children:"Apache Paimon"})," innovatively combines a lake format with an LSM (Log-Structured Merge-tree) structure, bringing efficient updates into the lake architecture.\nTo integrate Fluss with Paimon, you must enable lakehouse storage and configure Paimon as the lakehouse storage. For more details, see ",(0,s.jsx)(n.a,{href:"/docs/maintenance/tiered-storage/lakehouse-storage#enable-lakehouse-storage",children:"Enable Lakehouse Storage"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsxs)(n.p,{children:["When a table is created or altered with the option ",(0,s.jsx)(n.code,{children:"'table.datalake.enabled' = 'true'"}),", Fluss will automatically create a corresponding Paimon table with the same table path.\nThe schema of the Paimon table matches that of the Fluss table, except for the addition of three system columns at the end: ",(0,s.jsx)(n.code,{children:"__bucket"}),", ",(0,s.jsx)(n.code,{children:"__offset"}),", and ",(0,s.jsx)(n.code,{children:"__timestamp"}),".",(0,s.jsx)(n.br,{}),"\n","These system columns help Fluss clients consume data from Paimon in a streaming fashion, such as seeking by a specific bucket using an offset or timestamp."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"USE CATALOG fluss_catalog;\n\nCREATE TABLE fluss_order_with_lake (\n    `order_key` BIGINT,\n    `cust_key` INT NOT NULL,\n    `total_price` DECIMAL(15, 2),\n    `order_date` DATE,\n    `order_priority` STRING,\n    `clerk` STRING,\n    `ptime` AS PROCTIME(),\n    PRIMARY KEY (`order_key`) NOT ENFORCED\n ) WITH (\n     'table.datalake.enabled' = 'true',\n     'table.datalake.freshness' = '30s'\n);\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Then, the datalake tiering service continuously tiers data from Fluss to Paimon. The parameter ",(0,s.jsx)(n.code,{children:"table.datalake.freshness"})," controls the frequency that Fluss writes data to Paimon tables. By default, the data freshness is 3 minutes.",(0,s.jsx)(n.br,{}),"\n","For primary key tables, changelogs are also generated in the Paimon format, enabling stream-based consumption via Paimon APIs."]}),"\n",(0,s.jsxs)(n.p,{children:["Since Fluss version 0.7, you can also specify Paimon table properties when creating a datalake-enabled Fluss table by using the ",(0,s.jsx)(n.code,{children:"paimon."})," prefix within the Fluss table properties clause."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"CREATE TABLE fluss_order_with_lake (\n    `order_key` BIGINT,\n    `cust_key` INT NOT NULL,\n    `total_price` DECIMAL(15, 2),\n    `order_date` DATE,\n    `order_priority` STRING,\n    `clerk` STRING,\n    `ptime` AS PROCTIME(),\n    PRIMARY KEY (`order_key`) NOT ENFORCED\n ) WITH (\n     'table.datalake.enabled' = 'true',\n     'table.datalake.freshness' = '30s',\n     'paimon.file.format' = 'orc',\n     'paimon.deletion-vectors.enabled' = 'true'\n);\n"})}),"\n",(0,s.jsxs)(n.p,{children:["For example, you can specify the Paimon property ",(0,s.jsx)(n.code,{children:"file.format"})," to change the file format of the Paimon table, or set ",(0,s.jsx)(n.code,{children:"deletion-vectors.enabled"})," to enable or disable deletion vectors for the Paimon table."]}),"\n",(0,s.jsx)(n.h2,{id:"read-tables",children:"Read Tables"}),"\n",(0,s.jsx)(n.h3,{id:"reading-with-apache-flink",children:"Reading with Apache Flink"}),"\n",(0,s.jsxs)(n.p,{children:["For a table with the option ",(0,s.jsx)(n.code,{children:"'table.datalake.enabled' = 'true'"}),", its data exists in two layers: one remains in Fluss, and the other has already been tiered to Paimon.",(0,s.jsx)(n.br,{}),"\n","You can choose between two views of the table:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["A ",(0,s.jsx)(n.strong,{children:"Paimon-only view"}),", which offers minute-level latency but better analytics performance."]}),"\n",(0,s.jsxs)(n.li,{children:["A ",(0,s.jsx)(n.strong,{children:"combined view"})," of both Fluss and Paimon data, which provides second-level latency but may result in slightly degraded query performance."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"read-data-only-in-paimon",children:"Read Data Only in Paimon"}),"\n",(0,s.jsxs)(n.p,{children:["To read only data stored in Paimon, use the ",(0,s.jsx)(n.code,{children:"$lake"})," suffix in the table name. The following example demonstrates this:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"-- Assume we have a table named `orders`\n\n-- Read from Paimon\nSELECT COUNT(*) FROM orders$lake;\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"-- We can also query the system tables\nSELECT * FROM orders$lake$snapshots;\n"})}),"\n",(0,s.jsxs)(n.p,{children:["When you specify the ",(0,s.jsx)(n.code,{children:"$lake"})," suffix in a query, the table behaves like a standard Paimon table and inherits all its capabilities.",(0,s.jsx)(n.br,{}),"\n","This allows you to take full advantage of Flink's query support and optimizations on Paimon, such as querying system tables, time travel, and more.",(0,s.jsx)(n.br,{}),"\n","For further information, refer to Paimon\u2019s ",(0,s.jsx)(n.a,{href:"https://paimon.apache.org/docs/0.9/flink/sql-query/#sql-query",children:"SQL Query documentation"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"union-read-of-data-in-fluss-and-paimon",children:"Union Read of Data in Fluss and Paimon"}),"\n",(0,s.jsx)(n.p,{children:"To read the full dataset, which includes both Fluss (fresh) and Paimon (historical) data, simply query the table without any suffix. The following example illustrates this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"-- Query will union data from Fluss and Paimon\nSELECT SUM(order_count) AS total_orders FROM ads_nation_purchase_power;\n"})}),"\n",(0,s.jsx)(n.p,{children:"This query may run slower than reading only from Paimon, but it returns the most up-to-date data. If you execute the query multiple times, you may observe different results due to continuous data ingestion."}),"\n",(0,s.jsx)(n.h3,{id:"reading-with-other-engines",children:"Reading with other Engines"}),"\n",(0,s.jsxs)(n.p,{children:["Since the data tiered to Paimon from Fluss is stored as a standard Paimon table, you can use any engine that supports Paimon to read it. Below is an example using ",(0,s.jsx)(n.a,{href:"https://paimon.apache.org/docs/master/engines/starrocks/",children:"StarRocks"}),":"]}),"\n",(0,s.jsx)(n.p,{children:"First, create a Paimon catalog in StarRocks:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",metastring:'title="StarRocks SQL"',children:'CREATE EXTERNAL CATALOG paimon_catalog\nPROPERTIES (\n       "type" = "paimon",\n       "paimon.catalog.type" = "filesystem",\n       "paimon.catalog.warehouse" = "/tmp/paimon_data_warehouse"\n);\n'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"NOTE"}),": The configuration values for ",(0,s.jsx)(n.code,{children:"paimon.catalog.type"})," and ",(0,s.jsx)(n.code,{children:"paimon.catalog.warehouse"})," must match those used when configuring Paimon as the lakehouse storage for Fluss in ",(0,s.jsx)(n.code,{children:"server.yaml"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Then, you can query the ",(0,s.jsx)(n.code,{children:"orders"})," table using StarRocks:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",metastring:'title="StarRocks SQL"',children:"-- The table is in the database `fluss`\nSELECT COUNT(*) FROM paimon_catalog.fluss.orders;\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",metastring:'title="StarRocks SQL"',children:"-- Query the system tables to view snapshots of the table\nSELECT * FROM paimon_catalog.fluss.enriched_orders$snapshots;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"data-type-mapping",children:"Data Type Mapping"}),"\n",(0,s.jsxs)(n.p,{children:["When integrating with Paimon, Fluss automatically converts between Fluss data types and Paimon data types.",(0,s.jsx)(n.br,{}),"\n","The following table shows the mapping between ",(0,s.jsx)(n.a,{href:"/docs/table-design/data-types",children:"Fluss data types"})," and Paimon data types:"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Fluss Data Type"}),(0,s.jsx)(n.th,{children:"Paimon Data Type"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"BOOLEAN"}),(0,s.jsx)(n.td,{children:"BOOLEAN"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"TINYINT"}),(0,s.jsx)(n.td,{children:"TINYINT"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"SMALLINT"}),(0,s.jsx)(n.td,{children:"SMALLINT"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"INT"}),(0,s.jsx)(n.td,{children:"INT"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"BIGINT"}),(0,s.jsx)(n.td,{children:"BIGINT"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"FLOAT"}),(0,s.jsx)(n.td,{children:"FLOAT"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"DOUBLE"}),(0,s.jsx)(n.td,{children:"DOUBLE"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"DECIMAL"}),(0,s.jsx)(n.td,{children:"DECIMAL"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"STRING"}),(0,s.jsx)(n.td,{children:"STRING"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"CHAR"}),(0,s.jsx)(n.td,{children:"CHAR"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"DATE"}),(0,s.jsx)(n.td,{children:"DATE"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"TIME"}),(0,s.jsx)(n.td,{children:"TIME"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"TIMESTAMP"}),(0,s.jsx)(n.td,{children:"TIMESTAMP"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"TIMESTAMP WITH LOCAL TIMEZONE"}),(0,s.jsx)(n.td,{children:"TIMESTAMP WITH LOCAL TIMEZONE"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"BINARY"}),(0,s.jsx)(n.td,{children:"BINARY"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"BYTES"}),(0,s.jsx)(n.td,{children:"BYTES"})]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>l});var t=a(6540);const s={},i=t.createContext(s);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);