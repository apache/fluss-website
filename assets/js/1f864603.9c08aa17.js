"use strict";(self.webpackChunkfluss_website=self.webpackChunkfluss_website||[]).push([[7237],{6844:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"engine-flink/lookups","title":"Flink Lookup Joins","description":"Flink lookup joins are important because they enable efficient, real-time enrichment of streaming data with reference data, a common requirement in many real-time analytics and processing scenarios.","source":"@site/versioned_docs/version-0.6/engine-flink/lookups.md","sourceDirName":"engine-flink","slug":"/engine-flink/lookups","permalink":"/docs/0.6/engine-flink/lookups","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/fluss/edit/main/website/docs/engine-flink/lookups.md","tags":[],"version":"0.6","sidebarPosition":5,"frontMatter":{"sidebar_label":"Lookups","sidebar_position":5},"sidebar":"docsSidebar","previous":{"title":"Reads","permalink":"/docs/0.6/engine-flink/reads"},"next":{"title":"Connector Options","permalink":"/docs/0.6/engine-flink/options"}}');var t=o(4848),s=o(8453);const r={sidebar_label:"Lookups",sidebar_position:5},l="Flink Lookup Joins",a={},c=[{value:"Lookup",id:"lookup",level:2},{value:"Instructions",id:"instructions",level:3},{value:"Examples",id:"examples",level:3},{value:"Examples (Partitioned Table)",id:"examples-partitioned-table",level:3},{value:"Prefix Lookup",id:"prefix-lookup",level:2},{value:"Instructions",id:"instructions-1",level:3},{value:"Examples",id:"examples-1",level:3},{value:"Examples (Partitioned Table)",id:"examples-partitioned-table-1",level:3},{value:"Lookup Options",id:"lookup-options",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"flink-lookup-joins",children:"Flink Lookup Joins"})}),"\n",(0,t.jsx)(n.p,{children:"Flink lookup joins are important because they enable efficient, real-time enrichment of streaming data with reference data, a common requirement in many real-time analytics and processing scenarios."}),"\n",(0,t.jsx)(n.h2,{id:"lookup",children:"Lookup"}),"\n",(0,t.jsx)(n.h3,{id:"instructions",children:"Instructions"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Use a primary key table as a dimension table, and the join condition must include all primary keys of the dimension table."}),"\n",(0,t.jsxs)(n.li,{children:["Fluss lookup join is in asynchronous mode by default for higher throughput. You can change the mode of lookup join as synchronous mode by setting the SQL Hint ",(0,t.jsx)(n.code,{children:"'lookup.async' = 'false'"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Create two tables."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"USE CATALOG fluss_catalog;\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"CREATE DATABASE my_db;\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"USE my_db;\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"CREATE TABLE `fluss_catalog`.`my_db`.`orders` (\n  `o_orderkey` INT NOT NULL,\n  `o_custkey` INT NOT NULL,\n  `o_orderstatus` CHAR(1) NOT NULL,\n  `o_totalprice` DECIMAL(15, 2) NOT NULL,\n  `o_orderdate` DATE NOT NULL,\n  `o_orderpriority` CHAR(15) NOT NULL,\n  `o_clerk` CHAR(15) NOT NULL,\n  `o_shippriority` INT NOT NULL,\n  `o_comment` STRING NOT NULL,\n  `o_dt` STRING NOT NULL,\n  PRIMARY KEY (o_orderkey) NOT ENFORCED\n);\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"CREATE TABLE `fluss_catalog`.`my_db`.`customer` (\n  `c_custkey` INT NOT NULL,\n  `c_name` STRING NOT NULL,\n  `c_address` STRING NOT NULL,\n  `c_nationkey` INT NOT NULL,\n  `c_phone` CHAR(15) NOT NULL,\n  `c_acctbal` DECIMAL(15, 2) NOT NULL,\n  `c_mktsegment` CHAR(10) NOT NULL,\n  `c_comment` STRING NOT NULL,\n  PRIMARY KEY (c_custkey) NOT ENFORCED\n);\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Perform lookup join."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"CREATE TEMPORARY TABLE lookup_join_sink\n(\n   order_key INT NOT NULL,\n   order_totalprice DECIMAL(15, 2) NOT NULL,\n   customer_name STRING NOT NULL,\n   customer_address STRING NOT NULL\n) WITH ('connector' = 'blackhole');\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"-- look up join in asynchronous mode.\nINSERT INTO lookup_join_sink\nSELECT `o`.`o_orderkey`, `o`.`o_totalprice`, `c`.`c_name`, `c`.`c_address`\nFROM \n(SELECT `orders`.*, proctime() AS ptime FROM `orders`) AS `o`\nLEFT JOIN `customer`\nFOR SYSTEM_TIME AS OF `o`.`ptime` AS `c`\nON `o`.`o_custkey` = `c`.`c_custkey`;\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"-- look up join in synchronous mode.\nINSERT INTO lookup_join_sink\nSELECT `o`.`o_orderkey`, `o`.`o_totalprice`, `c`.`c_name`, `c`.`c_address`\nFROM \n(SELECT `orders`.*, proctime() AS ptime FROM `orders`) AS `o`\nLEFT JOIN `customer` /*+ OPTIONS('lookup.async' = 'false') */\nFOR SYSTEM_TIME AS OF `o`.`ptime` AS `c`\nON `o`.`o_custkey` = `c`.`c_custkey`;\n"})}),"\n",(0,t.jsx)(n.h3,{id:"examples-partitioned-table",children:"Examples (Partitioned Table)"}),"\n",(0,t.jsx)(n.p,{children:"Continuing from the previous example, if our dimension table is a Fluss partitioned primary key table, as follows:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"CREATE TABLE `fluss_catalog`.`my_db`.`customer_partitioned` (\n  `c_custkey` INT NOT NULL,\n  `c_name` STRING NOT NULL,\n  `c_address` STRING NOT NULL,\n  `c_nationkey` INT NOT NULL,\n  `c_phone` CHAR(15) NOT NULL,\n  `c_acctbal` DECIMAL(15, 2) NOT NULL,\n  `c_mktsegment` CHAR(10) NOT NULL,\n  `c_comment` STRING NOT NULL,\n  `dt` STRING NOT NULL,\n  PRIMARY KEY (`c_custkey`, `dt`) NOT ENFORCED\n) \nPARTITIONED BY (`dt`)\nWITH (\n    'table.auto-partition.enabled' = 'true',\n    'table.auto-partition.time-unit' = 'year'\n);\n"})}),"\n",(0,t.jsx)(n.p,{children:"To do a lookup join with the Fluss partitioned primary key table, we need to specify the\nprimary keys (including partition key) in the join condition."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"INSERT INTO lookup_join_sink\nSELECT `o`.`o_orderkey`, `o`.`o_totalprice`, `c`.`c_name`, `c`.`c_address`\nFROM \n(SELECT `orders`.*, proctime() AS ptime FROM `orders`) AS `o`\nLEFT JOIN `customer_partitioned`\nFOR SYSTEM_TIME AS OF `o`.`ptime` AS `c`\nON `o`.`o_custkey` = `c`.`c_custkey` AND  `o`.`o_dt` = `c`.`dt`;\n"})}),"\n",(0,t.jsxs)(n.p,{children:["For more details about Fluss partitioned table, see ",(0,t.jsx)(n.a,{href:"/docs/0.6/table-design/data-distribution/partitioning",children:"Partitioned Tables"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"prefix-lookup",children:"Prefix Lookup"}),"\n",(0,t.jsx)(n.h3,{id:"instructions-1",children:"Instructions"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Use a primary key table as a dimension table, and the join condition must a prefix subset of the primary keys of the dimension table."}),"\n",(0,t.jsx)(n.li,{children:"The bucket key of Fluss dimension table need to set as the join key when creating Fluss table."}),"\n",(0,t.jsxs)(n.li,{children:["Fluss prefix lookup join is in asynchronous mode by default for higher throughput. You can change the mode of prefix lookup join as synchronous mode by setting the SQL Hint ",(0,t.jsx)(n.code,{children:"'lookup.async' = 'false'"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"examples-1",children:"Examples"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Create two tables."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"USE CATALOG fluss_catalog;\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"CREATE DATABASE my_db;\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"USE my_db;\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"CREATE TABLE `fluss_catalog`.`my_db`.`orders_with_dt` (\n  `o_orderkey` INT NOT NULL,\n  `o_custkey` INT NOT NULL,\n  `o_orderstatus` CHAR(1) NOT NULL,\n  `o_totalprice` DECIMAL(15, 2) NOT NULL,\n  `o_orderdate` DATE NOT NULL,\n  `o_orderpriority` CHAR(15) NOT NULL,\n  `o_clerk` CHAR(15) NOT NULL,\n  `o_shippriority` INT NOT NULL,\n  `o_comment` STRING NOT NULL,\n  `o_dt` STRING NOT NULL,\n  PRIMARY KEY (o_orderkey) NOT ENFORCED\n);\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"-- primary keys are (c_custkey, c_nationkey)\n-- bucket key is (c_custkey)\nCREATE TABLE `fluss_catalog`.`my_db`.`customer_with_bucket_key` (\n  `c_custkey` INT NOT NULL,\n  `c_name` STRING NOT NULL,\n  `c_address` STRING NOT NULL,\n  `c_nationkey` INT NOT NULL,\n  `c_phone` CHAR(15) NOT NULL,\n  `c_acctbal` DECIMAL(15, 2) NOT NULL,\n  `c_mktsegment` CHAR(10) NOT NULL,\n  `c_comment` STRING NOT NULL,\n  PRIMARY KEY (`c_custkey`, `c_nationkey`) NOT ENFORCED\n) WITH (\n  'bucket.key' = 'c_custkey' \n);\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Perform prefix lookup."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"CREATE TEMPORARY TABLE prefix_lookup_join_sink\n(\n   order_key INT NOT NULL,\n   order_totalprice DECIMAL(15, 2) NOT NULL,\n   customer_name STRING NOT NULL,\n   customer_address STRING NOT NULL\n) WITH ('connector' = 'blackhole');\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"-- prefix look up join in asynchronous mode.\nINSERT INTO prefix_lookup_join_sink\nSELECT `o`.`o_orderkey`, `o`.`o_totalprice`, `c`.`c_name`, `c`.`c_address`\nFROM \n(SELECT `orders_with_dt`.*, proctime() AS ptime FROM `orders_with_dt`) AS `o`\nLEFT JOIN `customer_with_bucket_key`\nFOR SYSTEM_TIME AS OF `o`.`ptime` AS `c`\nON `o`.`o_custkey` = `c`.`c_custkey`;\n\n-- join key is a prefix set of dimension table primary keys.\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"-- prefix look up join in synchronous mode.\nINSERT INTO prefix_lookup_join_sink\nSELECT `o`.`o_orderkey`, `o`.`o_totalprice`, `c`.`c_name`, `c`.`c_address`\nFROM \n(SELECT `orders_with_dt`.*, proctime() AS ptime FROM `orders_with_dt`) AS `o`\nLEFT JOIN `customer_with_bucket_key` /*+ OPTIONS('lookup.async' = 'false') */\nFOR SYSTEM_TIME AS OF `o`.`ptime` AS `c`\nON `o`.`o_custkey` = `c`.`c_custkey`;\n"})}),"\n",(0,t.jsx)(n.h3,{id:"examples-partitioned-table-1",children:"Examples (Partitioned Table)"}),"\n",(0,t.jsx)(n.p,{children:"Continuing from the previous prefix lookup example, if our dimension table is a Fluss partitioned primary key table, as follows:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"-- primary keys are (c_custkey, c_nationkey, dt)\n-- bucket key is (c_custkey)\nCREATE TABLE `fluss_catalog`.`my_db`.`customer_partitioned_with_bukcet_key` (\n  `c_custkey` INT NOT NULL,\n  `c_name` STRING NOT NULL,\n  `c_address` STRING NOT NULL,\n  `c_nationkey` INT NOT NULL,\n  `c_phone` CHAR(15) NOT NULL,\n  `c_acctbal` DECIMAL(15, 2) NOT NULL,\n  `c_mktsegment` CHAR(10) NOT NULL,\n  `c_comment` STRING NOT NULL,\n  `dt` STRING NOT NULL,\n  PRIMARY KEY (`c_custkey`, `c_nationkey`, `dt`) NOT ENFORCED\n) \nPARTITIONED BY (`dt`)\nWITH (\n    'bucket.key' = 'c_custkey',\n    'table.auto-partition.enabled' = 'true',\n    'table.auto-partition.time-unit' = 'year'\n);\n"})}),"\n",(0,t.jsxs)(n.p,{children:["To do a prefix lookup with the Fluss partitioned primary key table, the prefix lookup join key is in pattern of\n",(0,t.jsx)(n.code,{children:"a prefix subset of primary keys (excluding partition key)"})," + ",(0,t.jsx)(n.code,{children:"partition key"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"INSERT INTO prefix_lookup_join_sink\nSELECT `o`.`o_orderkey`, `o`.`o_totalprice`, `c`.`c_name`, `c`.`c_address`\nFROM \n(SELECT `orders_with_dt`.*, proctime() AS ptime FROM `orders_with_dt`) AS `o`\nLEFT JOIN `customer_partitioned_with_bukcet_key`\nFOR SYSTEM_TIME AS OF `o`.`ptime` AS `c`\nON `o`.`o_custkey` = `c`.`c_custkey` AND  `o`.`o_dt` = `c`.`dt`;\n\n-- join key is a prefix set of dimension table primary keys (excluding partition key) + partition key.\n"})}),"\n",(0,t.jsxs)(n.p,{children:["For more details about Fluss partitioned table, see ",(0,t.jsx)(n.a,{href:"/docs/0.6/table-design/data-distribution/partitioning",children:"Partitioned Tables"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"lookup-options",children:"Lookup Options"}),"\n",(0,t.jsxs)(n.p,{children:["Fluss lookup join supports various configuration options. For more details, please refer to the ",(0,t.jsx)(n.a,{href:"/docs/0.6/engine-flink/options#lookup-options",children:"Connector Options"})," page."]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>l});var i=o(6540);const t={},s=i.createContext(t);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);