"use strict";(self.webpackChunkfluss_website=self.webpackChunkfluss_website||[]).push([[4980],{8266:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>g,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var s=n(3169),r=n(4848),i=n(8453);const a={slug:"tiering-service",title:"Tiering Service Deep Dive",authors:["gyang94"],toc_max_heading_level:5},o="Tiering Service Deep Dive",c={authorsImageUrls:[void 0]},l=[{value:"Background",id:"background",level:2}];function u(e){const t={code:"code",h2:"h2",img:"img",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"background",children:"Background"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{src:n(6760).A+"",width:"2036",height:"924"})}),"\n",(0,r.jsxs)(t.p,{children:["At the core of Fluss\u2019s Lakehouse architecture sits the ",(0,r.jsx)(t.strong,{children:"Tiering Service:"})," a smart,\npolicy-driven data pipeline that seamlessly bridges your real-time Fluss cluster and your cost-efficient lakehouse storage. It continuously ingests fresh events from the fluss cluster, automatically migrating older or less-frequently accessed data into colder storage tiers without interrupting ongoing queries. By balancing hot, warm, and cold storage according to configurable rules, the Tiering Service ensures that recent data remains instantly queryable while historical records are archived economically."]}),"\n",(0,r.jsxs)(t.p,{children:["In this blog post we will take a deep dive and explore how Fluss\u2019s Tiering Service ",(0,r.jsx)(t.code,{children:"orchestrates data movement"}),", ",(0,r.jsx)(t.code,{children:"preserves consistency"}),", and empowers ",(0,r.jsx)(t.code,{children:"scalable"}),", ",(0,r.jsx)(t.code,{children:"high-performance"})," analytics at ",(0,r.jsx)(t.code,{children:"optimized costs"}),"."]})]})}function g(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},6760:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/background-8a1ebc79c438a3deabba060edf8eaa0b.png"},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var s=n(6540);const r={},i=s.createContext(r);function a(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:t},e.children)}},3169:e=>{e.exports=JSON.parse('{"permalink":"/blog/tiering-service","source":"@site/blog/2025-07-01-tiering-service.md","title":"Tiering Service Deep Dive","description":"\x3c!--","date":"2025-07-01T00:00:00.000Z","tags":[],"hasTruncateMarker":true,"authors":[{"name":"GUO Yang","title":"Fluss Contributor","url":"https://github.com/gyang94","imageURL":"https://github.com/gyang94.png","key":"gyang94","page":null}],"frontMatter":{"slug":"tiering-service","title":"Tiering Service Deep Dive","authors":["gyang94"],"toc_max_heading_level":5},"unlisted":false,"prevItem":{"title":"Apache Fluss Java Client: A Deep Dive","permalink":"/blog/fluss-java-client"},"nextItem":{"title":"Announcing Fluss 0.7","permalink":"/blog/releases/0.7"}}')}}]);