"use strict";(self.webpackChunkfluss_website=self.webpackChunkfluss_website||[]).push([[4715],{5220:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"maintenance/filesystems/overview","title":"File Systems","description":"\x3c!--","source":"@site/versioned_docs/version-0.7/maintenance/filesystems/overview.md","sourceDirName":"maintenance/filesystems","slug":"/maintenance/filesystems/overview","permalink":"/docs/maintenance/filesystems/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/fluss/edit/main/website/docs/maintenance/filesystems/overview.md","tags":[],"version":"0.7","sidebarPosition":1,"frontMatter":{"sidebar_label":"Overview","title":"File Systems","sidebar_position":1},"sidebar":"docsSidebar","previous":{"title":"Configuration","permalink":"/docs/maintenance/configuration"},"next":{"title":"HDFS","permalink":"/docs/maintenance/filesystems/hdfs"}}');var t=n(4848),l=n(8453);const r={sidebar_label:"Overview",title:"File Systems",sidebar_position:1},o="File Systems",a={},c=[{value:"Local File System",id:"local-file-system",level:2},{value:"Pluggable File Systems",id:"pluggable-file-systems",level:2}];function d(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"file-systems",children:"File Systems"})}),"\n",(0,t.jsxs)(s.p,{children:["Fluss uses file systems as remote storage to store snapshots for Primary-Key Table and store tiered log segments for Log Table. These\nare some of the file systems that Fluss supports currently, including ",(0,t.jsx)(s.em,{children:"local"}),", ",(0,t.jsx)(s.em,{children:"hadoop"}),", ",(0,t.jsx)(s.em,{children:"Aliyun OSS"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["The file system used for a particular file is determined by its URI scheme. For example, ",(0,t.jsx)(s.code,{children:"file:///home/user/text.txt"})," refers to a file in the local file system,\nwhile ",(0,t.jsx)(s.code,{children:"hdfs://namenode:50010/data/user/text.txt"})," is a file in a specific HDFS cluster."]}),"\n",(0,t.jsx)(s.p,{children:"File system instances are instantiated once per process and then cached/pooled, to avoid configuration overhead per stream creation."}),"\n",(0,t.jsx)(s.h2,{id:"local-file-system",children:"Local File System"}),"\n",(0,t.jsxs)(s.p,{children:["Fluss has built-in support for the file system of the local machine, including any NFS or SAN drives mounted into that local file system. Local files are referenced with the ",(0,t.jsx)(s.code,{children:"file://"})," URI scheme. You\ncan use local file system as remote storage for testing purposes with the following configuration in Fluss' ",(0,t.jsx)(s.code,{children:"server.yaml"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",children:"remote.data.dir: file:///path/to/remote/storage\n"})}),"\n",(0,t.jsx)(s.admonition,{type:"warning",children:(0,t.jsxs)(s.p,{children:["Never use local file system as remote storage in production as it is not fault-tolerant. Please use distributed file systems or cloud object storage listed in ",(0,t.jsx)(s.a,{href:"#pluggable-file-systems",children:"Pluggable File Systems"}),"."]})}),"\n",(0,t.jsx)(s.h2,{id:"pluggable-file-systems",children:"Pluggable File Systems"}),"\n",(0,t.jsx)(s.p,{children:"The Fluss project supports the following file system:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.a,{href:"/docs/maintenance/filesystems/hdfs",children:"HDFS"})})," is supported by ",(0,t.jsx)(s.code,{children:"fluss-fs-hadoop"})," and registered under the ",(0,t.jsx)(s.code,{children:"hdfs://"})," URI scheme."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.a,{href:"/docs/maintenance/filesystems/oss",children:"Aliyun OSS"})})," is supported by ",(0,t.jsx)(s.code,{children:"fluss-fs-oss"})," and registered under the ",(0,t.jsx)(s.code,{children:"oss://"})," URI scheme."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.a,{href:"/docs/maintenance/filesystems/s3",children:"AWS S3"})})," is supported by ",(0,t.jsx)(s.code,{children:"fluss-fs-s3"})," and registered under the ",(0,t.jsx)(s.code,{children:"s3://"})," URI scheme."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["The implementation is based on ",(0,t.jsx)(s.a,{href:"https://hadoop.apache.org/",children:"Hadoop Project"})," but is self-contained with no dependency footprint."]})]})}function h(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>o});var i=n(6540);const t={},l=i.createContext(t);function r(e){const s=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(l.Provider,{value:s},e.children)}}}]);