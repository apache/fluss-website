"use strict";(self.webpackChunkfluss_website=self.webpackChunkfluss_website||[]).push([[8901],{1151:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"engine-flink/lookups","title":"Flink Lookup Joins","description":"Flink lookup joins are important because they enable efficient, real-time enrichment of streaming data with reference data, a common requirement in many real-time analytics and processing scenarios.","source":"@site/versioned_docs/version-0.5/engine-flink/lookups.md","sourceDirName":"engine-flink","slug":"/engine-flink/lookups","permalink":"/docs/0.5/engine-flink/lookups","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/fluss/edit/main/website/docs/engine-flink/lookups.md","tags":[],"version":"0.5","sidebarPosition":5,"frontMatter":{"sidebar_label":"Lookups","sidebar_position":5},"sidebar":"docsSidebar","previous":{"title":"Reads","permalink":"/docs/0.5/engine-flink/reads"},"next":{"title":"Lakehouse Overview","permalink":"/docs/0.5/streaming-lakehouse/overview"}}');var i=o(4848),s=o(8453);const r={sidebar_label:"Lookups",sidebar_position:5},l="Flink Lookup Joins",c={},a=[{value:"Instructions",id:"instructions",level:2},{value:"Examples",id:"examples",level:2},{value:"Lookup Options",id:"lookup-options",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"flink-lookup-joins",children:"Flink Lookup Joins"})}),"\n",(0,i.jsx)(n.p,{children:"Flink lookup joins are important because they enable efficient, real-time enrichment of streaming data with reference data, a common requirement in many real-time analytics and processing scenarios."}),"\n",(0,i.jsx)(n.h2,{id:"instructions",children:"Instructions"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Use a primary key table as a dimension table,  and the join condition must include all primary keys of the dimension table."}),"\n",(0,i.jsxs)(n.li,{children:["Fluss lookup join is in asynchronous mode by default for higher throughput. You can change the mode of lookup join as synchronous mode by setting the SQL Hint ",(0,i.jsx)(n.code,{children:"'lookup.async' = 'false'"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Create two tables."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE `fluss_catalog`.`my_db`.`orders` (\n  `o_orderkey` INT NOT NULL,\n  `o_custkey` INT NOT NULL,\n  `o_orderstatus` CHAR(1) NOT NULL,\n  `o_totalprice` DECIMAL(15, 2) NOT NULL,\n  `o_orderdate` DATE NOT NULL,\n  `o_orderpriority` CHAR(15) NOT NULL,\n  `o_clerk` CHAR(15) NOT NULL,\n  `o_shippriority` INT NOT NULL,\n  `o_comment` STRING NOT NULL,\n  PRIMARY KEY (o_orderkey) NOT ENFORCED\n);\n\n\nCREATE TABLE `fluss_catalog`.`my_db`.`customer` (\n  `c_custkey` INT NOT NULL,\n  `c_name` STRING NOT NULL,\n  `c_address` STRING NOT NULL,\n  `c_nationkey` INT NOT NULL,\n  `c_phone` CHAR(15) NOT NULL,\n  `c_acctbal` DECIMAL(15, 2) NOT NULL,\n  `c_mktsegment` CHAR(10) NOT NULL,\n  `c_comment` STRING NOT NULL,\n  PRIMARY KEY (c_custkey) NOT ENFORCED\n);\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:"Perform lookup join."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"USE CATALOG `fluss_catalog`;\nUSE my_db;\n\nCREATE TEMPORARY TABLE lookup_join_sink\n(\n   order_key INT NOT NULL,\n   order_totalprice DECIMAL(15, 2) NOT NULL,\n   customer_name STRING NOT NULL,\n   customer_address STRING NOT NULL\n) WITH ('connector' = 'blackhole');\n\n-- look up join in asynchronous mode.\nINSERT INTO lookup_join_sink\nSELECT `o`.`o_orderkey`, `o`.`o_totalprice`, `c`.`c_name`, `c`.`c_address`\nFROM \n(SELECT `orders`.*, proctime() AS ptime FROM `orders`) AS `o`\nLEFT JOIN `customer`\nFOR SYSTEM_TIME AS OF `o`.`ptime` AS `c`\nON `o`.`o_custkey` = `c`.`c_custkey`;\n\n\n-- look up join in synchronous mode.\nINSERT INTO lookup_join_sink\nSELECT `o`.`o_orderkey`, `o`.`o_totalprice`, `c`.`c_name`, `c`.`c_address`\nFROM \n(SELECT `orders`.*, proctime() AS ptime FROM `orders`) AS `o`\nLEFT JOIN `customer` /*+ OPTIONS('lookup.async' = 'false') */\nFOR SYSTEM_TIME AS OF `o`.`ptime` AS `c`\nON `o`.`o_custkey` = `c`.`c_custkey`;\n\n"})}),"\n",(0,i.jsx)(n.h2,{id:"lookup-options",children:"Lookup Options"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Option"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Required"}),(0,i.jsx)(n.th,{children:"Default"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"lookup.cache"}),(0,i.jsx)(n.td,{children:"Enum"}),(0,i.jsx)(n.td,{children:"optional"}),(0,i.jsx)(n.td,{children:"NONE"}),(0,i.jsx)(n.td,{children:"The caching strategy for this lookup table, including NONE, PARTIAL."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"lookup.max-retries"}),(0,i.jsx)(n.td,{children:"Integer"}),(0,i.jsx)(n.td,{children:"optional"}),(0,i.jsx)(n.td,{children:"3"}),(0,i.jsx)(n.td,{children:"The maximum allowed retries if a lookup operation fails."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"lookup.partial-cache.expire-after-access"}),(0,i.jsx)(n.td,{children:"Duration"}),(0,i.jsx)(n.td,{children:"optional"}),(0,i.jsx)(n.td,{children:"(none)"}),(0,i.jsx)(n.td,{children:"Duration to expire an entry in the cache after accessing."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"lookup.partial-cache.expire-after-write"}),(0,i.jsx)(n.td,{children:"Duration"}),(0,i.jsx)(n.td,{children:"optional"}),(0,i.jsx)(n.td,{children:"(none)"}),(0,i.jsx)(n.td,{children:"Duration to expire an entry in the cache after writing."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"lookup.partial-cache.cache-missing-key"}),(0,i.jsx)(n.td,{children:"Boolean"}),(0,i.jsx)(n.td,{children:"optional"}),(0,i.jsx)(n.td,{children:"true"}),(0,i.jsx)(n.td,{children:"Whether to store an empty value into the cache if the lookup key doesn't match any rows in the table."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"lookup.partial-cache.max-rows"}),(0,i.jsx)(n.td,{children:"Long"}),(0,i.jsx)(n.td,{children:"optional"}),(0,i.jsx)(n.td,{children:"true"}),(0,i.jsx)(n.td,{children:"The maximum number of rows to store in the cache."})]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>l});var t=o(6540);const i={},s=t.createContext(i);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);