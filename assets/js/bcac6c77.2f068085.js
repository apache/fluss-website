"use strict";(self.webpackChunkfluss_website=self.webpackChunkfluss_website||[]).push([[109],{6534:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"maintenance/observability/quickstart","title":"Observability Quickstart Guides","description":"\x3c!--","source":"@site/versioned_docs/version-0.7/maintenance/observability/quickstart.md","sourceDirName":"maintenance/observability","slug":"/maintenance/observability/quickstart","permalink":"/docs/maintenance/observability/quickstart","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/fluss/edit/main/website/docs/maintenance/observability/quickstart.md","tags":[],"version":"0.7","sidebarPosition":1,"frontMatter":{"sidebar_label":"Quickstart Guides","title":"Observability Quickstart Guides","sidebar_position":1},"sidebar":"docsSidebar","previous":{"title":"Lakehouse Storage","permalink":"/docs/maintenance/tiered-storage/lakehouse-storage"},"next":{"title":"Metric Reporters","permalink":"/docs/maintenance/observability/metric-reporters"}}');var a=s(4848),t=s(8453);const i={sidebar_label:"Quickstart Guides",title:"Observability Quickstart Guides",sidebar_position:1},o="Observability Quickstart Guides",l={},c=[{value:"Observability with Prometheus, Loki and Grafana",id:"observability-with-prometheus-loki-and-grafana",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"observability-quickstart-guides",children:"Observability Quickstart Guides"})}),"\n",(0,a.jsxs)(n.p,{children:["On this page, you can find the following guides to set up an observability stack ",(0,a.jsxs)(n.strong,{children:["based on the instructions in the ",(0,a.jsx)(n.a,{href:"/docs/quickstart/flink",children:"Flink quickstart guide"})]}),":"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#observability-with-prometheus-loki-and-grafana",children:"Observability with Prometheus, Loki and Grafana"})}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"observability-with-prometheus-loki-and-grafana",children:"Observability with Prometheus, Loki and Grafana"}),"\n",(0,a.jsx)(n.p,{children:"We provide a minimal quickstart configuration for application observability with Prometheus (metric aggregation system), Loki (log aggregation sytem) and Grafana (dashboard system)."}),"\n",(0,a.jsx)(n.p,{children:"The quickstart configuration comes with 2 metric dashboards."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Fluss \u2013 overview"}),": Selected metrics to observe the overall cluster status"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Fluss \u2013 detail"}),": Majority of metrics listed in ",(0,a.jsx)(n.a,{href:"/docs/maintenance/observability/monitor-metrics#metrics-list",children:"metrics list"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Follow the instructions below to add observability capabilities to your setup."}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["Download the ",(0,a.jsx)("a",{href:s(7812).A,target:"_blank",children:"observability quickstart configuration"})," and extract the ZIP archive in your working directory.\nAfter extracting the archive, the contents of the working directory should be as follows."]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"\u251c\u2500\u2500 docker-compose.yml              # docker compose manifest from quickstart guide\n\u2514\u2500\u2500 fluss-quickstart-observability  # downloaded and extracted ZIP archive\n    \u251c\u2500\u2500 grafana\n    \u2502   \u251c\u2500\u2500 grafana.ini\n    \u2502   \u2514\u2500\u2500 provisioning\n    \u2502       \u251c\u2500\u2500 dashboards\n    \u2502       \u2502   \u251c\u2500\u2500 default.yml\n    \u2502       \u2502   \u2514\u2500\u2500 fluss\n    \u2502       \u2502       \u2514\u2500\u2500 ...\n    \u2502       \u2514\u2500\u2500 datatsources\n    \u2502           \u2514\u2500\u2500 default.yml\n    \u251c\u2500\u2500 prometheus\n    \u2502   \u2514\u2500\u2500 prometheus.yml\n    \u2514\u2500\u2500 slf4j\n        \u2514\u2500\u2500 ...\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"2",children:["\n",(0,a.jsxs)(n.li,{children:["Next, you need to configure Fluss to expose logs to Loki. We will use ",(0,a.jsx)(n.a,{href:"https://loki4j.github.io/loki-logback-appender/",children:"Loki4j"})," which uses Logback as logging backend.\nThe container manifest below configures Fluss to use Logback and Loki4j. Save it to a file named ",(0,a.jsx)(n.code,{children:"fluss-slf4j-logback.Dockerfile"})," in your working directory."]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-dockerfile",children:"ARG FLUSS_VERSION\n\nFROM fluss/fluss:0.7.0\n\n# remove default logging backend from classpath and add logback to classpath\nRUN rm -rf ${FLUSS_HOME}/lib/log4j-slf4j-impl-*.jar && \\\n    wget https://repo1.maven.org/maven2/ch/qos/logback/logback-classic/1.2.13/logback-classic-1.2.13.jar -P ${FLUSS_HOME}/lib/ && \\\n    wget https://repo1.maven.org/maven2/ch/qos/logback/logback-core/1.2.13/logback-core-1.2.13.jar -P ${FLUSS_HOME}/lib/\n\n# add loki4j logback appender to classpath\nRUN wget https://repo1.maven.org/maven2/com/github/loki4j/loki-logback-appender/1.4.2/loki-logback-appender-1.4.2.jar -P ${FLUSS_HOME}/lib/\n\n# logback configuration that exposes metrics to loki\nCOPY fluss-quickstart-observability/slf4j/logback-loki-console.xml ${FLUSS_HOME}/conf/logback-console.xml\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["Detailed configuration instructions for Fluss and Logback can be found ",(0,a.jsx)(n.a,{href:"/docs/maintenance/observability/logging#configuring-logback",children:"here"}),"."]})}),"\n",(0,a.jsxs)(n.ol,{start:"3",children:["\n",(0,a.jsxs)(n.li,{children:["Additionally, you need to adapt the ",(0,a.jsx)(n.code,{children:"docker-compose.yml"})," and"]}),"\n"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"add containers for Prometheus, Loki and Grafana and mount the corresponding configuration directories."}),"\n",(0,a.jsxs)(n.li,{children:["build and use the new Fluss image manifest (",(0,a.jsx)(n.code,{children:"fluss-sfl4j-logback.Dockerfile"}),")."]}),"\n",(0,a.jsx)(n.li,{children:"configure Fluss to expose metrics via Prometheus."}),"\n",(0,a.jsxs)(n.li,{children:["add the desired application name that should be used when displaying logs in Grafana as environment variable (",(0,a.jsx)(n.code,{children:"APP_NAME"}),")."]}),"\n",(0,a.jsx)(n.li,{children:"configure Flink to expose metrics via Prometheus."}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["To do this, you can simply copy the manifest below into your ",(0,a.jsx)(n.code,{children:"docker-compose.yml"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'services:\n  #begin Fluss cluster\n  coordinator-server:\n    image: fluss-slf4j-logback:0.7.0\n    build:\n      args:\n        FLUSS_VERSION: 0.7.0\n      dockerfile: fluss-slf4j-logback.Dockerfile\n    command: coordinatorServer\n    depends_on:\n      - zookeeper\n    environment:\n      - |\n        FLUSS_PROPERTIES=\n        zookeeper.address: zookeeper:2181\n        bind.listeners: FLUSS://coordinator-server:9123\n        remote.data.dir: /tmp/fluss/remote-data\n        datalake.format: paimon\n        datalake.paimon.metastore: filesystem\n        datalake.paimon.warehouse: /tmp/paimon\n        metrics.reporters: prometheus\n        metrics.reporter.prometheus.port: 9250\n        logback.configurationFile: logback-loki-console.xml\n      - APP_NAME=coordinator-server\n  tablet-server:\n    image: fluss-slf4j-logback:0.7.0\n    build:\n      args:\n        FLUSS_VERSION: 0.7.0\n      dockerfile: fluss-slf4j-logback.Dockerfile\n    command: tabletServer\n    depends_on:\n      - coordinator-server\n    environment:\n      - |\n        FLUSS_PROPERTIES=\n        zookeeper.address: zookeeper:2181\n        bind.listeners: FLUSS://tablet-server:9123\n        data.dir: /tmp/fluss/data\n        remote.data.dir: /tmp/fluss/remote-data\n        kv.snapshot.interval: 0s\n        datalake.format: paimon\n        datalake.paimon.metastore: filesystem\n        datalake.paimon.warehouse: /tmp/paimon\n        metrics.reporters: prometheus\n        metrics.reporter.prometheus.port: 9250\n        logback.configurationFile: logback-loki-console.xml\n      - APP_NAME=tablet-server\n  zookeeper:\n    restart: always\n    image: zookeeper:3.9.2\n  #end\n  #begin Flink cluster\n  jobmanager:\n    image: fluss/quickstart-flink:1.20-0.7.0\n    ports:\n      - "8083:8081"\n    command: jobmanager\n    environment:\n      - |\n        FLINK_PROPERTIES=\n        jobmanager.rpc.address: jobmanager\n        metrics.reporter.prom.factory.class: org.apache.flink.metrics.prometheus.PrometheusReporterFactory\n        metrics.reporter.prom.port: 9250\n    volumes:\n      - shared-tmpfs:/tmp/paimon\n  taskmanager:\n    image: fluss/quickstart-flink:1.20-0.7.0\n    depends_on:\n      - jobmanager\n    command: taskmanager\n    environment:\n      - |\n        FLINK_PROPERTIES=\n        jobmanager.rpc.address: jobmanager\n        taskmanager.numberOfTaskSlots: 10\n        taskmanager.memory.process.size: 2048m\n        taskmanager.memory.framework.off-heap.size: 256m\n        metrics.reporter.prom.factory.class: org.apache.flink.metrics.prometheus.PrometheusReporterFactory\n        metrics.reporter.prom.port: 9250\n    volumes:\n      - shared-tmpfs:/tmp/paimon\n  #end\n  #begin observability\n  prometheus:\n    image: bitnami/prometheus:2.55.1-debian-12-r0\n    ports:\n      - "9092:9090"\n    volumes:\n      - ./fluss-quickstart-observability/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro\n  loki:\n    image: grafana/loki:3.3.2\n    ports:\n      - "3102:3100"\n  grafana:\n    image:\n      grafana/grafana:11.4.0\n    ports:\n      - "3002:3000"\n    depends_on:\n      - prometheus\n      - loki\n    volumes:\n      - ./fluss-quickstart-observability/grafana:/etc/grafana:ro\n  #end\n\nvolumes:\n  shared-tmpfs:\n    driver: local\n    driver_opts:\n      type: "tmpfs"\n      device: "tmpfs"\n'})}),"\n",(0,a.jsx)(n.p,{children:"Then run"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"# note the --build flag!\ndocker compose up -d --build\n"})}),"\n",(0,a.jsx)(n.p,{children:"to apply the changes."}),"\n",(0,a.jsx)(n.admonition,{type:"warning",children:(0,a.jsxs)(n.p,{children:["This recreates ",(0,a.jsx)(n.code,{children:"shared-tmpfs"})," and all data is lost (created tables, running jobs, etc.)"]})}),"\n",(0,a.jsx)(n.p,{children:"Make sure that the modified and added containers are up and running using"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"docker container ls -a\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"4",children:["\n",(0,a.jsx)(n.li,{children:"Now you are all set! You can visit"}),"\n"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Grafana to view Fluss logs with the ",(0,a.jsx)(n.a,{href:"http://localhost:3002/a/grafana-lokiexplore-app/",children:"log explorer"})," and observe metrics of the Fluss and Flink cluster with the ",(0,a.jsx)(n.a,{href:"http://localhost:3002/dashboards",children:"provided dashboards"})," or"]}),"\n",(0,a.jsxs)(n.li,{children:["the ",(0,a.jsx)(n.a,{href:"http://localhost:9092",children:"Prometheus Web UI"})," to directly query Prometheus with ",(0,a.jsx)(n.a,{href:"https://prometheus.io/docs/prometheus/2.55/getting_started/",children:"PromQL"}),"."]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},7812:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/files/fluss-quickstart-observability-b1c7c2103cbbdea2b24816ff0d6f914d.zip"},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>o});var r=s(6540);const a={},t=r.createContext(a);function i(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);