"use strict";(self.webpackChunkfluss_website=self.webpackChunkfluss_website||[]).push([[6499],{6095:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"quickstart/security","title":"Secure Your Fluss Cluster","description":"\x3c!--","source":"@site/docs/quickstart/security.md","sourceDirName":"quickstart","slug":"/quickstart/security","permalink":"/docs/next/quickstart/security","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/fluss/edit/main/website/docs/quickstart/security.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Secure Your Fluss Cluster","sidebar_position":2},"sidebar":"docsSidebar","previous":{"title":"Real-Time Analytics with Flink.","permalink":"/docs/next/quickstart/flink"},"next":{"title":"Architecture","permalink":"/docs/next/concepts/architecture"}}');var a=s(4848),t=s(8453);const i={title:"Secure Your Fluss Cluster",sidebar_position:2},l="Secure Your Fluss Cluster in Minutes",c={},o=[{value:"Example 1: Secure Fluss with Different Roles",id:"example-1-secure-fluss-with-different-roles",level:2},{value:"Environment Setup",id:"environment-setup",level:3},{value:"Prerequisites",id:"prerequisites",level:4},{value:"Starting required components",id:"starting-required-components",level:4},{value:"Enter into SQL-Client",id:"enter-into-sql-client",level:3},{value:"Create Catalogs for Each User",id:"create-catalogs-for-each-user",level:3},{value:"Add ACLs for Users",id:"add-acls-for-users",level:3},{value:"Create Tables Using Different Users",id:"create-tables-using-different-users",level:3},{value:"Write Data",id:"write-data",level:3},{value:"Read Data",id:"read-data",level:3},{value:"Example 2: Multi-Tenant Isolation in a Fluss Cluster",id:"example-2-multi-tenant-isolation-in-a-fluss-cluster",level:2},{value:"Environment Setup",id:"environment-setup-1",level:3},{value:"Enter into SQL-Client",id:"enter-into-sql-client-1",level:3},{value:"Create Catalogs for Each User",id:"create-catalogs-for-each-user-1",level:3},{value:"Create Databases and Set ACLs",id:"create-databases-and-set-acls",level:3},{value:"Granularity of Database Visibility",id:"granularity-of-database-visibility",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"secure-your-fluss-cluster-in-minutes",children:"Secure Your Fluss Cluster in Minutes"})}),"\n",(0,a.jsx)(n.p,{children:"This guide demonstrates how to secure your Fluss cluster using two practical examples:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Securing a Fluss cluster within a department with different roles"}),"\n",(0,a.jsx)(n.li,{children:"Enabling multi-tenant isolation in a Fluss cluster"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"These scenarios will help you understand how to configure authentication and authorization, manage access control, and implement data isolation in real-world use cases."}),"\n",(0,a.jsx)(n.h2,{id:"example-1-secure-fluss-with-different-roles",children:"Example 1: Secure Fluss with Different Roles"}),"\n",(0,a.jsx)(n.p,{children:"In this example, we assume there are three users within a department:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"admin"}),": A superuser who can manage the entire Fluss cluster."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"developer"}),": A user that is allowed to read and write data."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"consumer"}),": A user that is allowed to read data only."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"environment-setup",children:"Environment Setup"}),"\n",(0,a.jsx)(n.h4,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsxs)(n.p,{children:["Before proceeding with this guide, ensure that ",(0,a.jsx)(n.a,{href:"https://docs.docker.com/engine/install/",children:"Docker"})," and the ",(0,a.jsx)(n.a,{href:"https://docs.docker.com/compose/install/linux/",children:"Docker Compose plugin"})," are installed on your machine.\nAll commands were tested with Docker version 27.4.0 and Docker Compose version v2.30.3."]}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["We encourage you to use a recent version of Docker and ",(0,a.jsx)(n.a,{href:"https://docs.docker.com/compose/releases/migrate/",children:"Compose v2"})," (however, Compose v1 might work with a few adaptions)."]})}),"\n",(0,a.jsx)(n.h4,{id:"starting-required-components",children:"Starting required components"}),"\n",(0,a.jsx)(n.p,{children:"We will use docker compose to spin up the required components for this tutorial."}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Create a working directory for this guide."}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"mkdir fluss-quickstart-security\ncd fluss-quickstart-security\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"2",children:["\n",(0,a.jsxs)(n.li,{children:["Create a ",(0,a.jsx)(n.code,{children:"docker-compose.yml"})," file with the following content:"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'services:\n  #begin Fluss cluster\n  coordinator-server:\n    image: fluss/fluss:0.8-SNAPSHOT\n    command: coordinatorServer\n    depends_on:\n      - zookeeper\n    environment:\n      - |\n        FLUSS_PROPERTIES=\n        zookeeper.address: zookeeper:2181\n        bind.listeners: INTERNAL://coordinator-server:0, CLIENT://coordinator-server:9123\n        internal.listener.name: INTERNAL\n        remote.data.dir: /tmp/fluss/remote-data\n        # security properties\n        security.protocol.map: CLIENT:SASL, INTERNAL:PLAINTEXT\n        security.sasl.enabled.mechanisms: PLAIN\n        security.sasl.plain.jaas.config: com.alibaba.fluss.security.auth.sasl.plain.PlainLoginModule required user_admin="admin-pass" user_developer="developer-pass" user_consumer="consumer-pass";\n        authorizer.enabled: true\n        super.users: User:admin\n  tablet-server:\n    image: fluss/fluss:0.8-SNAPSHOT\n    command: tabletServer\n    depends_on:\n      - coordinator-server\n    environment:\n      - |\n        FLUSS_PROPERTIES=\n        zookeeper.address: zookeeper:2181\n        bind.listeners: INTERNAL://tablet-server:0, CLIENT://tablet-server:9123\n        internal.listener.name: INTERNAL\n        tablet-server.id: 0\n        kv.snapshot.interval: 0s\n        data.dir: /tmp/fluss/data\n        remote.data.dir: /tmp/fluss/remote-data\n        # security properties\n        security.protocol.map: CLIENT:SASL, INTERNAL:PLAINTEXT\n        security.sasl.enabled.mechanisms: PLAIN\n        security.sasl.plain.jaas.config: com.alibaba.fluss.security.auth.sasl.plain.PlainLoginModule required user_admin="admin-pass" user_developer="developer-pass" user_consumer="consumer-pass";\n        authorizer.enabled: true\n        super.users: User:admin\n    volumes:\n      - shared-tmpfs:/tmp/fluss\n  zookeeper:\n    restart: always\n    image: zookeeper:3.9.2\n  #end\n  #begin Flink cluster\n  jobmanager:\n    image: fluss/quickstart-flink:1.20-0.7-SNAPSHOT\n    ports:\n      - "8083:8081"\n    command: jobmanager\n    environment:\n      - |\n        FLINK_PROPERTIES=\n        jobmanager.rpc.address: jobmanager\n    volumes:\n      - shared-tmpfs:/tmp/paimon\n  taskmanager:\n    image: fluss/quickstart-flink:1.20-0.7-SNAPSHOT\n    depends_on:\n      - jobmanager\n    command: taskmanager\n    environment:\n      - |\n        FLINK_PROPERTIES=\n        jobmanager.rpc.address: jobmanager\n        taskmanager.numberOfTaskSlots: 10\n        taskmanager.memory.process.size: 2048m\n        taskmanager.memory.framework.off-heap.size: 256m\n    volumes:\n      - shared-tmpfs:/tmp/paimon\n  #end\n\nvolumes:\n  shared-tmpfs:\n    driver: local\n    driver_opts:\n      type: "tmpfs"\n      device: "tmpfs"\n'})}),"\n",(0,a.jsx)(n.p,{children:"The Docker Compose environment consists of the following containers:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Fluss Cluster:"})," a Fluss ",(0,a.jsx)(n.code,{children:"CoordinatorServer"}),", a Fluss ",(0,a.jsx)(n.code,{children:"TabletServer"})," and a ",(0,a.jsx)(n.code,{children:"ZooKeeper"})," server.\nIt uses SASL/PLAIN for user authentication and defines three users: ",(0,a.jsx)(n.code,{children:"admin"}),", ",(0,a.jsx)(n.code,{children:"developer"}),", and ",(0,a.jsx)(n.code,{children:"consumer"}),". The ",(0,a.jsx)(n.code,{children:"admin"})," user is a ",(0,a.jsx)(n.code,{children:"super.users"})," who has full administrative privileges on the Fluss cluster."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Flink Cluster"}),": a Flink ",(0,a.jsx)(n.code,{children:"JobManager"})," and a Flink ",(0,a.jsx)(n.code,{children:"TaskManager"})," container to execute queries."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Note:"})," The ",(0,a.jsx)(n.code,{children:"fluss/quickstart-flink"})," image is based on ",(0,a.jsx)(n.a,{href:"https://hub.docker.com/layers/library/flink/1.20-java17/images/sha256:bf1af6406c4f4ad8faa46efe2b3d0a0bf811d1034849c42c1e3484712bc83505",children:"flink:1.20.1-java17"})," and\nincludes the ",(0,a.jsx)(n.a,{href:"/docs/next/engine-flink/getting-started",children:"fluss-flink connector"})," to simplify this guide."]}),"\n",(0,a.jsxs)(n.ol,{start:"3",children:["\n",(0,a.jsx)(n.li,{children:"To start all containers, run:"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"docker compose up -d\n"})}),"\n",(0,a.jsx)(n.p,{children:"This command automatically starts all the containers defined in the Docker Compose configuration in detached mode."}),"\n",(0,a.jsx)(n.p,{children:"Run"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"docker container ls -a\n"})}),"\n",(0,a.jsx)(n.p,{children:"to check whether all containers are running properly."}),"\n",(0,a.jsxs)(n.p,{children:["You can also visit ",(0,a.jsx)(n.a,{href:"http://localhost:8083/",children:"http://localhost:8083/"})," to see if Flink is running normally."]}),"\n",(0,a.jsx)(n.h3,{id:"enter-into-sql-client",children:"Enter into SQL-Client"}),"\n",(0,a.jsx)(n.p,{children:"First, use the following command to enter the Flink SQL CLI Container:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"docker compose exec jobmanager ./sql-client\n"})}),"\n",(0,a.jsx)(n.h3,{id:"create-catalogs-for-each-user",children:"Create Catalogs for Each User"}),"\n",(0,a.jsx)(n.p,{children:"Create separate catalogs for each user:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"CREATE CATALOG admin_catalog WITH (\n    'type' = 'fluss',\n    'bootstrap.servers' = 'coordinator-server:9123',\n    'client.security.protocol' = 'SASL',\n    'client.security.sasl.mechanism' = 'PLAIN',\n    'client.security.sasl.username' = 'admin',\n    'client.security.sasl.password' = 'admin-pass'\n);\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"CREATE CATALOG developer_catalog WITH (\n    'type' = 'fluss',\n    'bootstrap.servers' = 'coordinator-server:9123',\n    'client.security.protocol' = 'SASL',\n    'client.security.sasl.mechanism' = 'PLAIN',\n    'client.security.sasl.username' = 'developer',\n    'client.security.sasl.password' = 'developer-pass'\n);\n\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"CREATE CATALOG consumer_catalog WITH (\n    'type' = 'fluss',\n    'bootstrap.servers' = 'coordinator-server:9123',\n    'client.security.protocol' = 'SASL',\n    'client.security.sasl.mechanism' = 'PLAIN',\n    'client.security.sasl.username' = 'consumer',\n    'client.security.sasl.password' = 'consumer-pass'\n);\n"})}),"\n",(0,a.jsx)(n.h3,{id:"add-acls-for-users",children:"Add ACLs for Users"}),"\n",(0,a.jsxs)(n.p,{children:["As the ",(0,a.jsx)(n.code,{children:"admin"})," user, add ACLs to grant permissions:"]}),"\n",(0,a.jsxs)(n.p,{children:["Allow ",(0,a.jsx)(n.code,{children:"developer"})," user to read and write data:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"CALL admin_catalog.sys.add_acl(\n    resource => 'cluster', \n    permission => 'ALLOW',\n    principal => 'User:developer', \n    operation => 'WRITE'\n);\n\nCALL admin_catalog.sys.add_acl(\n    resource => 'cluster', \n    permission => 'ALLOW',\n    principal => 'User:developer', \n    operation => 'READ'\n);\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Allow ",(0,a.jsx)(n.code,{children:"consumer"})," user to read data:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"CALL admin_catalog.sys.add_acl(\n   resource => 'cluster', \n    permission => 'ALLOW',\n    principal => 'User:consumer', \n    operation => 'READ'\n);\n"})}),"\n",(0,a.jsx)(n.p,{children:"Lookup the ACLs:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"CALL admin_catalog.sys.list_acl(\n    resource => 'cluster'\n);\n"})}),"\n",(0,a.jsx)(n.p,{children:"Output will show like:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:'+-------------------------------------------------------------------------------------------------------+\n|                                                                                                result |\n+-------------------------------------------------------------------------------------------------------+\n|  resource="cluster";permission="ALLOW";principal="User:developer";operation="READ";host="*" |\n| resource="cluster";permission="ALLOW";principal="User:developer";operation="WRITE";host="*" |\n|   resource="cluster";permission="ALLOW";principal="User:consumer";operation="READ";host="*" |\n+-------------------------------------------------------------------------------------------------------+\n3 rows in set\n'})}),"\n",(0,a.jsx)(n.h3,{id:"create-tables-using-different-users",children:"Create Tables Using Different Users"}),"\n",(0,a.jsxs)(n.p,{children:["Only the ",(0,a.jsx)(n.code,{children:"admin"})," user can create tables:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"-- switch to admin user context\nUSE CATALOG admin_catalog;\n\n-- create table using admin credentials\nCREATE TABLE fluss_order (\n     `order_key`  INT NOT NULL,\n    `total_price` DECIMAL(15, 2),\n    PRIMARY KEY (`order_key`) NOT ENFORCED\n);\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Output:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"[INFO] Execute statement succeeded.\n"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"developer"})," user cannot create tables:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"-- switch to developer user context\nUSE CATALOG developer_catalog;\n\n-- create table using developer credentials\nCREATE TABLE fluss_order1(\n    `order_key`  INT NOT NULL,\n    `total_price` DECIMAL(15, 2),\n    PRIMARY KEY (`order_key`) NOT ENFORCED\n);\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Output:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"[ERROR] Could not execute SQL statement. Reason:\ncom.alibaba.fluss.exception.AuthorizationException: Principal FlussPrincipal{name='developer', type='User'} have no authorization to operate CREATE on resource Resource{type=DATABASE, name='fluss'} \n"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"consumer"})," user also cannot create tables:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"-- switch to consumer user context\nUSE CATALOG consumer_catalog;\n\n-- create table using consumer credentials\nCREATE TABLE fluss_order2(\n    `order_key`  INT NOT NULL,\n    `total_price` DECIMAL(15, 2),\n    PRIMARY KEY (`order_key`) NOT ENFORCED\n);\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Output:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"[ERROR] Could not execute SQL statement. Reason:\ncom.alibaba.fluss.exception.AuthorizationException: Principal FlussPrincipal{name='consumer', type='User'} have no authorization to operate CREATE on resource Resource{type=DATABASE, name='fluss'} \n"})}),"\n",(0,a.jsx)(n.h3,{id:"write-data",children:"Write Data"}),"\n",(0,a.jsxs)(n.p,{children:["Write data using the ",(0,a.jsx)(n.code,{children:"developer"})," user:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"-- switch to developer user context\nUSE CATALOG developer_catalog;\n\n-- write data using developer credentials\nINSERT INTO fluss_order VALUES (1, 1.0);\n"})}),"\n",(0,a.jsx)(n.p,{children:"The job should succeed as shown in the Flink UI."}),"\n",(0,a.jsxs)(n.p,{children:["Attempting to write data using the ",(0,a.jsx)(n.code,{children:"consumer"})," user will fail in the Flink UI:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"-- switch to consumer user context\nUSE CATALOG consumer_catalog;\n\n-- write data using consumer credentials\nINSERT INTO fluss_order VALUES (1, 1.0);\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Output:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"Caused by: java.util.concurrent.CompletionException: com.alibaba.fluss.exception.AuthorizationException: No WRITE permission among all the tables: [fluss.fluss_order]\n"})}),"\n",(0,a.jsx)(n.h3,{id:"read-data",children:"Read Data"}),"\n",(0,a.jsxs)(n.p,{children:["Read data using the ",(0,a.jsx)(n.code,{children:"consumer"})," user:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"SET 'execution.runtime-mode' = 'batch';\n-- use tableau result mode\nSET 'sql-client.execution.result-mode' = 'tableau';\n    \n-- switch to consumer user context\nUSE CATALOG consumer_catalog;\n-- read data using consumer credentials\nSELECT * FROM `consumer_catalog`.`fluss`.`fluss_order` LIMIT 10;\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Output:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"+-----------+-------------+\n| order_key | total_price |\n+-----------+-------------+\n|         1 |        1.00 |\n+-----------+-------------+\n1 row in set (5.27 seconds)\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Attempting to read data using the ",(0,a.jsx)(n.code,{children:"developer"})," user also get the same result:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"SET 'execution.runtime-mode' = 'batch';\n-- use tableau result mode\nSET 'sql-client.execution.result-mode' = 'tableau';\n-- switch to developer user context\nUSE CATALOG developer_catalog;\n\n-- read data using developer credentials\nSELECT * FROM `developer_catalog`.`fluss`.`fluss_order` LIMIT 10;\n"})}),"\n",(0,a.jsx)(n.h2,{id:"example-2-multi-tenant-isolation-in-a-fluss-cluster",children:"Example 2: Multi-Tenant Isolation in a Fluss Cluster"}),"\n",(0,a.jsx)(n.p,{children:"This example shows how to enable multi-tenant isolation in a Fluss cluster."}),"\n",(0,a.jsxs)(n.p,{children:["We'll demonstrate two departments \u2014 ",(0,a.jsx)(n.code,{children:"marketing"})," and ",(0,a.jsx)(n.code,{children:"finance"})," \u2014 each with its own dedicated database. The cluster includes the following users:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"admin"}),": A superuser with full access."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"marketing"}),": A user who can only access the ",(0,a.jsx)(n.code,{children:"marketing_db"})," database."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"finance"}),": A user who can only access the ",(0,a.jsx)(n.code,{children:"finance_db"})," database."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"environment-setup-1",children:"Environment Setup"}),"\n",(0,a.jsx)(n.p,{children:"All the steps are same as Example 1, but update the JAAS configuration to include the new users:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'services:\n  #begin Fluss cluster\n  coordinator-server:\n    image: fluss/fluss:0.8-SNAPSHOT\n    command: coordinatorServer\n    depends_on:\n      - zookeeper\n    environment:\n      - |\n        FLUSS_PROPERTIES=\n        zookeeper.address: zookeeper:2181\n        bind.listeners: INTERNAL://coordinator-server:0, CLIENT://coordinator-server:9123\n        internal.listener.name: INTERNAL\n        remote.data.dir: /tmp/fluss/remote-data\n        # security properties\n        security.protocol.map: CLIENT:SASL, INTERNAL:PLAINTEXT\n        security.sasl.enabled.mechanisms: PLAIN\n        security.sasl.plain.jaas.config: com.alibaba.fluss.security.auth.sasl.plain.PlainLoginModule required user_admin="admin-pass" user_marketing="marketing-pass" user_finance="finance-pass";\n        authorizer.enabled: true\n        super.users: User:admin\n  tablet-server:\n    image: fluss/fluss:0.8-SNAPSHOT\n    command: tabletServer\n    depends_on:\n      - coordinator-server\n    environment:\n      - |\n        FLUSS_PROPERTIES=\n        zookeeper.address: zookeeper:2181\n        bind.listeners: INTERNAL://tablet-server:0, CLIENT://tablet-server:9123\n        internal.listener.name: INTERNAL\n        tablet-server.id: 0\n        kv.snapshot.interval: 0s\n        data.dir: /tmp/fluss/data\n        remote.data.dir: /tmp/fluss/remote-data\n        # security properties\n        security.protocol.map: CLIENT:SASL, INTERNAL:PLAINTEXT\n        security.sasl.enabled.mechanisms: PLAIN\n        security.sasl.plain.jaas.config: com.alibaba.fluss.security.auth.sasl.plain.PlainLoginModule required user_admin="admin-pass" user_marketing="marketing-pass" user_finance="finance-pass";\n        authorizer.enabled: true\n        super.users: User:admin\n    volumes:\n      - shared-tmpfs:/tmp/fluss\n  zookeeper:\n    restart: always\n    image: zookeeper:3.9.2\n  #end\n  #begin Flink cluster\n  jobmanager:\n    image: fluss/quickstart-flink:1.20-0.7-SNAPSHOT\n    ports:\n      - "8083:8081"\n    command: jobmanager\n    environment:\n      - |\n        FLINK_PROPERTIES=\n        jobmanager.rpc.address: jobmanager\n    volumes:\n      - shared-tmpfs:/tmp/paimon\n  taskmanager:\n    image: fluss/quickstart-flink:1.20-0.7-SNAPSHOT\n    depends_on:\n      - jobmanager\n    command: taskmanager\n    environment:\n      - |\n        FLINK_PROPERTIES=\n        jobmanager.rpc.address: jobmanager\n        taskmanager.numberOfTaskSlots: 10\n        taskmanager.memory.process.size: 2048m\n        taskmanager.memory.framework.off-heap.size: 256m\n    volumes:\n      - shared-tmpfs:/tmp/paimon\n  #end\nvolumes:\n  shared-tmpfs:\n    driver: local\n    driver_opts:\n      type: "tmpfs"\n      device: "tmpfs"\n'})}),"\n",(0,a.jsx)(n.h3,{id:"enter-into-sql-client-1",children:"Enter into SQL-Client"}),"\n",(0,a.jsx)(n.p,{children:"First, use the following command to enter the Flink SQL CLI Container:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"docker compose exec jobmanager ./sql-client\n"})}),"\n",(0,a.jsx)(n.h3,{id:"create-catalogs-for-each-user-1",children:"Create Catalogs for Each User"}),"\n",(0,a.jsxs)(n.p,{children:["Create separate catalogs for the ",(0,a.jsx)(n.code,{children:"admin"}),", ",(0,a.jsx)(n.code,{children:"marketing"}),", and ",(0,a.jsx)(n.code,{children:"finance"})," users:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"CREATE CATALOG admin_catalog WITH (\n'type' = 'fluss',\n'bootstrap.servers' = 'coordinator-server:9123',\n'client.security.protocol' = 'SASL',\n'client.security.sasl.mechanism' = 'PLAIN',\n'client.security.sasl.username' = 'admin',\n'client.security.sasl.password' = 'admin-pass'\n);\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"CREATE CATALOG marketing_catalog WITH (\n'type' = 'fluss',\n'bootstrap.servers' = 'coordinator-server:9123',\n'client.security.protocol' = 'SASL',\n'client.security.sasl.mechanism' = 'PLAIN',\n'client.security.sasl.username' = 'marketing',\n'client.security.sasl.password' = 'marketing-pass'\n);\n\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"CREATE CATALOG finance_catalog WITH (\n'type' = 'fluss',\n'bootstrap.servers' = 'coordinator-server:9123',\n'client.security.protocol' = 'SASL',\n'client.security.sasl.mechanism' = 'PLAIN',\n'client.security.sasl.username' = 'finance',\n'client.security.sasl.password' = 'finance-pass'\n);\n"})}),"\n",(0,a.jsx)(n.h3,{id:"create-databases-and-set-acls",children:"Create Databases and Set ACLs"}),"\n",(0,a.jsxs)(n.p,{children:["As the ",(0,a.jsx)(n.code,{children:"admin"})," user, create two databases and assign appropriate ACLs:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"CREATE DATABASE `admin_catalog`.`marketing_db`;\nCALL admin_catalog.sys.add_acl(\n    resource => 'cluster.marketing_db', \n    permission => 'ALLOW',\n    principal => 'User:marketing', \n    operation => 'ALL'\n);\n\n\nCREATE DATABASE `admin_catalog`.`finance_db`;\nCALL admin_catalog.sys.add_acl(\n    resource => 'cluster.finance_db', \n    permission => 'ALLOW',\n    principal => 'User:finance', \n    operation => 'ALL'\n);\n"})}),"\n",(0,a.jsx)(n.p,{children:"Lookup the ACLs:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"CALL admin_catalog.sys.list_acl(\n    resource => 'ANY'\n);\n"})}),"\n",(0,a.jsx)(n.p,{children:"Output will show like:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:'+----------------------------------------------------------------------------------------------------+\n|                                                                                             result |\n+----------------------------------------------------------------------------------------------------+\n| resource="cluster.marketing_db";permission="ALLOW";principal="User:marketing";operation="ALL";host="*" |\n|     resource="cluster.finance_db";permission="ALLOW";principal="User:finance";operation="ALL";host="*" |\n+----------------------------------------------------------------------------------------------------+\n2 rows in set\n'})}),"\n",(0,a.jsx)(n.h3,{id:"granularity-of-database-visibility",children:"Granularity of Database Visibility"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"marketing"})," user can only see the ",(0,a.jsx)(n.code,{children:"marketing_db"})," database"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"-- switch to marketing user context\nuse catalog marketing_catalog;\n-- show databases using marketing user credentials\nshow databases;\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Output:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"+---------------+\n| database name |\n+---------------+\n|  marketing_db |\n+---------------+\n1 row in set\n"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"finance"})," user can only see the ",(0,a.jsx)(n.code,{children:"finance_db"})," database:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"-- switch to finance user context\nuse catalog finance_catalog;\n-- show databases using finance user credentials\nshow databases;\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Output:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"+---------------+\n| database name |\n+---------------+\n|    finance_db |\n+---------------+\n1 row in set\n"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"marketing"})," user can operate on their own database:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"-- switch to marketing user context\nuse catalog marketing_catalog;\n-- create table using marketing user credentials\nCREATE TABLE `marketing_db`.`order` (\n     `order_key`  INT NOT NULL,\n    `total_price` DECIMAL(15, 2),\n    PRIMARY KEY (`order_key`) NOT ENFORCED\n);\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Output:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"[INFO] Execute statement succeeded.\n"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"finance"})," user cannot access the ",(0,a.jsx)(n.code,{children:"marketing"})," database:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",metastring:'title="Flink SQL"',children:"-- switch to finance user context\nuse catalog finance_catalog;\n-- create table using finance user credentials\nCREATE TABLE `marketing_db`.`order` (\n     `order_key`  INT NOT NULL,\n    `total_price` DECIMAL(15, 2),\n    PRIMARY KEY (`order_key`) NOT ENFORCED\n);\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Output:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"[ERROR] Could not execute SQL statement. Reason:\ncom.alibaba.fluss.exception.AuthorizationException: Principal FlussPrincipal{name='finance', type='User'} have no authorization to operate CREATE on resource Resource{type=DATABASE, name='marketing_db'} \n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>l});var r=s(6540);const a={},t=r.createContext(a);function i(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);